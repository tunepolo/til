[{"content":"   Photo by Tim Mossholder on Unsplash\n  ","date":-62135596800,"description":"","lastmod":"2020-05-05T21:14:10+09:00","objectID":"3976528693a0108357f4928017600865","permalink":"https://tunepolo.github.io/til/","title":"TIL : Today I learned"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"2b5b80219ea9dee90e638071a7e2c7b0","permalink":"https://tunepolo.github.io/til/algorithm/","title":"Algorithm"},{"content":"2つの文字列がどの程度異なっているかを示す距離の一種。編集距離とも呼ばれる。\nスペルチェッカー等において、2つの文字列がどの程度に類似しているかを具体的な値として使われる。\n レーベンシュタイン距離 - Wikipedia 編集距離（レーベンシュタイン距離）を理解し、実装する - Qiita  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"6eb84c65b596d5bc29b2aca95ef85202","permalink":"https://tunepolo.github.io/til/algorithm/levenstein_distance/","title":"レーベンシュタイン距離"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"55ed2e0a9b44648ef43cbb49ae9ffb45","permalink":"https://tunepolo.github.io/til/architecture/","title":"Architecture"},{"content":"既存のシステムを段階的に新規システムに置き換えていく手法のこと。\nストラングラー(Strangler)は直訳すると「絞殺者」。 つる植物（絞め殺しの木）が自身の寄生した木を絞め殺している様子をヒントに、段階的なシステム移行の比喩に使われた。\n参考  ストラングラーパターン：段階的なシステム移行 – VELTRA Engineering – Medium  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"6b35be83154dbc47a3777cb226ffa669","permalink":"https://tunepolo.github.io/til/architecture/strangler_pattern/","title":"ストラングラーパターン"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"fa0c747f1d2a19d1fa3a7675d61fead8","permalink":"https://tunepolo.github.io/til/aws/","title":"AWS"},{"content":" リージョン : 地理的に大きく離れたデータセンターの集合体。東京、バージニア北部など AZ : Availability Zoneの略。リージョン内の1ないし複数のデータセンターの集合体。AZを跨いだ障害が起きにくいように設計されている。  参考  AWSのリージョン、AZ、VPC、サブネットの話 - Qiita  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"6148d2188105c93fc3d449c52202baa3","permalink":"https://tunepolo.github.io/til/aws/region_and_az/","title":"リージョンとAZ"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"5e857c6e42423b79f77266a02a016077","permalink":"https://tunepolo.github.io/til/centos/","title":"CentOS"},{"content":"/etc/redhat-releaseを確認する。\n$ cat /etc/redhat-release CentOS release 6.4 (Final) ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"14c83688dcee86e8360f799defbdcb99","permalink":"https://tunepolo.github.io/til/centos/version_check/","title":"バージョンの確認方法"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"132d9371fc215518cf5c647fc04f28b0","permalink":"https://tunepolo.github.io/til/circleci/","title":"CircleCI"},{"content":"同じブランチに対してトリガーされ、実行待ちとなっているビルドを検知して自動的にキャンセルできる。\nプロジェクト設定（BUILD SETTINGS \u0026amp;gt; Advanced Settings）にある下記2つを有効化することで使用できる。\n Auto-cancel redundant builds Enable pipelines  参考  CircleCI の Auto-cancel redundant builds が Workflows にも対応した - kakakakakku blog  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:51:53+09:00","objectID":"87aa6c3b7f85e704c2092a439f14c13c","permalink":"https://tunepolo.github.io/til/circleci/auto-cancel_redundant_builds/","title":"連続してトリガーされたビルドを自動キャンセルする"},{"content":"Workflowが使われていたり、Orbsが使われていると実行される設定が分かりにくくなる。 また2.1形式の設定ファイルはローカル実行もできない。\n下記のやり方でOrbやJobs/Commandを展開し、2.1形式のファイルを2.0形式に変換した結果を入手できる。\n$ circleci config process .circleci/config.yml # Orb \u0026#39;sue445/ruby-orbs@1.4.3\u0026#39; resolved to \u0026#39;sue445/ruby-orbs@1.4.3\u0026#39; # Orb \u0026#39;yasuhiroki/reviewdog@0.0.3\u0026#39; resolved to \u0026#39;yasuhiroki/reviewdog@0.0.3\u0026#39; version: 2 jobs: rails_minitest: working_directory: ~/workspace docker: - image: circleci/ruby:2.6.1-node-browsers environment: RAILS_ENV: test steps: - checkout - restore_cache: keys: - v1-bundle-{{ .Environment.CIRCLE_JOB }}-{{ checksum \u0026amp;quot;Gemfile.lock\u0026amp;quot; }}-{{ .Branch }} - v1-bundle-{{ .Environment.CIRCLE_JOB }}-{{ checksum \u0026amp;quot;Gemfile.lock\u0026amp;quot; }} - v1-bundle-{{ .Environment.CIRCLE_JOB }} - v1-bundle - run: command: | set -xe bundle_install_args=\u0026amp;quot;--jobs=4 --retry=3 --path=vendor/bundle --gemfile=Gemfile\u0026amp;quot; bundle_install_args=\u0026amp;quot;$bundle_install_args --clean\u0026amp;quot; bundle_extra_args=\u0026amp;quot;\u0026amp;quot; if [ -n \u0026amp;quot;$bundle_extra_args\u0026amp;quot; ]; then bundle_install_args=\u0026amp;quot;$bundle_install_args $bundle_extra_args\u0026amp;quot; fi with_gemfile_lock=\u0026amp;quot;false\u0026amp;quot; with_gemfile_lock=\u0026amp;quot;true\u0026amp;quot; if [ $with_gemfile_lock == \u0026amp;quot;true\u0026amp;quot; ]; then bundle install $bundle_install_args else run_bundle_install=\u0026amp;quot;true\u0026amp;quot; if [ $run_bundle_install == \u0026amp;quot;true\u0026amp;quot; ]; then set +e bundle install $bundle_install_args ret=$? set -e else ret=1 fi # Retry with `bundle update` if `bundle install` is failed if [ $ret -ne 0 ]; then # NOTE: `.bundle/config` is not created after `bundle install` is failed mkdir -p .bundle/ echo \u0026#39;---\u0026#39; \u0026amp;gt; .bundle/config echo \u0026#39;BUNDLE_PATH: \u0026amp;quot;vendor/bundle\u0026amp;quot;\u0026#39; \u0026amp;gt;\u0026amp;gt; .bundle/config bundle update --jobs=4 fi fi name: bundle install - run: command: | set -xe if [ \u0026amp;quot;Gemfile\u0026amp;quot; == \u0026amp;quot;Gemfile\u0026amp;quot; ]; then gem install restore_bundled_with --no-document restore-bundled-with fi name: restore-bundled-with - save_cache: key: v1-bundle-{{ .Environment.CIRCLE_JOB }}-{{ checksum \u0026amp;quot;Gemfile.lock\u0026amp;quot; …","date":-62135596800,"description":"","lastmod":"2020-05-05T17:51:53+09:00","objectID":"540b115362579fa819639b1746ec5433","permalink":"https://tunepolo.github.io/til/circleci/convert_20_to_21/","title":"2.1形式のファイルを2.0形式に変換する"},{"content":"$ circleci config validate Config file at .circleci/config.yml is valid. ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"90d4bd91ebbdb5c235bd270ca1db3cc2","permalink":"https://tunepolo.github.io/til/circleci/local_config_validate/","title":"CircleCIの設定ファイルをローカルで検証する"},{"content":"circleci config packコマンドで結合できる。 ファイルの配置は結合後のYAMLのキー・設定値と対応させる必要がある。\n$ tree . └── your-orb-source ├── @orb.yml ├── commands │ └── foo.yml └── jobs └── bar.yml 上記のファイル構造は下記のように結合される。\n$ circleci config pack your-orb-source # contents of @orb.yml appear here commands: foo: # contents of foo.yml appear here jobs: bar: # contents of bar.yml appear here 参考  Using the CircleCI Local CLI - CircleCI  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:51:53+09:00","objectID":"711c0ab6a571842017f91a3d8e626409","permalink":"https://tunepolo.github.io/til/circleci/separate_config/","title":"設定ファイルを分割する"},{"content":"Contextsとは環境変数を保護し、プロジェクト間で共有するためのメカニズムである。 Organizationの設定ページで設定できる。\n使い方は下記の手順を踏む。\n 適当な名前を決めてConetxtsを作成する config.ymlのworkflowsセクションでcontext: \u0026amp;lt;context name\u0026amp;gt; キーを追加する。  参考  コンテキストの使用 - CircleCI CircleCIのcontexts便利じゃん - Qiita  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:51:53+09:00","objectID":"75f540eaa8950e3df0cbab2d1f234294","permalink":"https://tunepolo.github.io/til/circleci/use_contexts/","title":"Contextsを使う"},{"content":"globstarとはzshで使える **/*.rbのような0以上のディレクトリに展開される表記を指す。\nCircleCIではbashが使われるが、bashでは明示的にshopt -s globstarが設定されていない限り、デフォルトでは ** は * 相当に展開される。\nglobstarを使う場合、circleci tests glob \u0026amp;quot;**/*.rb\u0026amp;quot;のように記述する。\n bashとzshとglobstar | r7kamura on Patreon  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:51:53+09:00","objectID":"3863527a07a864b9e7908a424421f9d1","permalink":"https://tunepolo.github.io/til/circleci/use_globstar/","title":"globstarを使う"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"e97c93613c97ffaba4df34fa10f40cef","permalink":"https://tunepolo.github.io/til/cygwin/","title":"Cygwin"},{"content":"下記コマンドで作成する。\n$ mkpasswd -l -c \u0026amp;gt; /etc/passwd $ mkgroup -l -c \u0026amp;gt; /etc/group 巨大ドメインに参加している PC での /etc/passwd, /etc/group ファイルのつくりかた\n","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"17bc33ca573fe5ed326f180655ff178d","permalink":"https://tunepolo.github.io/til/cygwin/create_etc_passwd/","title":"/etc/passwdを作成する"},{"content":"chereを使うと簡単。Cygwinのパッケージインストーラーから探して入れておく。 実行時は管理者権限でCygwinを起動しておく必要がある。\nchere -ian -e \u0026amp;quot;Open in Cygwin\u0026amp;quot; -t mintty -s zsh 【chere】右クリックから現在のフォルダをCygwinのBashで開く(ショートカットキー対応)\n","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"a2856aa6e5e589d9a9519c95ef93db0c","permalink":"https://tunepolo.github.io/til/cygwin/open_from_context_menu/","title":"フォルダーの右クリックからCygwinを開くメニューを追加する"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"b909cf83a84b4bb0fabe6d19f628eb7c","permalink":"https://tunepolo.github.io/til/docker/","title":"Docker"},{"content":"ローカル環境のイメージを表示 $ docker images REPOSITORY TAG IMAGE ID CREATED SIZE circleci/picard latest 95ab6c488705 5 days ago 102MB circleci/ruby 2.5.3-node-browsers e3e595663b2c 10 days ago 2.02GB circleci/ruby 2.6.1-node-browsers 3ea7b04df6dc 10 days ago 2.02GB circleci/ruby 2.6.1 cf96d5f9e8cf 10 days ago 1.21GB circleci/golang 1.11.2 3e93e4cd615c 2 months ago 1.13GB ローカル環境のDockerコンテナの一覧を表示 $ docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES Dockerイメージの削除 $ docker rmi 95ab6c488705 Untagged: circleci/picard:latest Untagged: circleci/picard@sha256:a6decb2448f4371c64efde9dad90cc4efe0a72216ba7dc288fc89341d0b0c9d2 Deleted: sha256:95ab6c48870525a4596da7e4942e97d7b6cad3d307982fb4e92d244549b576e7 Deleted: sha256:a285c3f03146a03c665e6fe750737ac26abb304780f1d880b997bada0143513c Deleted: sha256:4b13dd28c2bf8d5bd54d98681610dd60749434b544e86c3945f3de1469924e4f Deleted: sha256:1ac7df22a46bb91060529dc6e0f9e5df63f37c698537cb966371dd48e3bfcf57 Deleted: sha256:71f5e9d93fe58ac53183778ad7fb30cd1ccf19d0aabbca16b5a1d920b1938d39 Deleted: sha256:c374bc45818d75cc05e893b7faa35af3517caae9ef789e949bf847c7513a4e56 Deleted: sha256:767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb 参考文献  Docker入門（第二回）～Dockerセットアップ、コンテナ起動～  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"71af859c6c31efc4e9c6c770ffd25a4a","permalink":"https://tunepolo.github.io/til/docker/basic_command/","title":"Dockerの基本操作"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"d26a29335cdbdee1ed1a0645b4641c9a","permalink":"https://tunepolo.github.io/til/git/","title":"Git"},{"content":"実行権限をつける/はずす 実行権限をつけるとき。\n$ git update-index --add --chmod=+x [filename] 実行権限を外すとき。\n$ git update-index --add --chmod=-x [filename] アクセス権の違いを無視する $ git config core.filemode false ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"0759219975e2caad164a854eb367af54","permalink":"https://tunepolo.github.io/til/git/access_right_handling/","title":"アクセス権の扱い"},{"content":"Homebrewでインストールする。\n$ brew install git-secrets git-secretsを利用するリポジトリでhookのインストールを行い、パターンを登録する。\n$ git secrets --install $ git secrets --register-aws 全リポジトリにパターン設定をすることもできる。\n# for AWS $ git secrets --register-aws --global # for GCP @see https://cloudplatform-jp.googleblog.com/2017/08/help-keep-your-Google-Cloud-service-account-keys-safe.html git secrets --add \u0026#39;private_key\u0026#39; --global git secrets --add \u0026#39;private_key_id\u0026#39; --global init/clone時にgit secretsのインストールを行うにはinit.templatedirの設定をする。\n$ git secrets --install ~/.git-templates/secrets $ git config --global init.templatedir \u0026#39;~/.git-templates/secrets\u0026#39; 参考  git-secretsの設定を手元の全Repositoryに反映する。｜teitei.tk｜note  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"2c8c6384b697833d95b2c29edc055c90","permalink":"https://tunepolo.github.io/til/git/basic_secrets/","title":"git secretsの基本操作"},{"content":"clocではvcsオプションがあり、git配下にあるファイルのみを対象とできる。\n Respect .gitignore · Issue #49 · AlDanial/cloc  $ cloc --vcs=git 169 text files. 163 unique files. 36 files ignored. github.com/AlDanial/cloc v 1.80 T=0.35 s (439.0 files/s, 10178.5 lines/s) ------------------------------------------------------------------------------- Language files blank comment code ------------------------------------------------------------------------------- Ruby 89 310 388 1590 Haml 38 3 2 315 Sass 8 39 21 250 YAML 10 52 105 220 HTML 3 15 3 182 Markdown 1 15 0 28 JSON 1 0 0 5 JavaScript 3 3 26 4 CSS 1 0 15 0 CoffeeScript 1 0 3 0 ------------------------------------------------------------------------------- SUM: 155 437 563 2594 ------------------------------------------------------------------------------- clocのオプションを設定するよりはgitのサブコマンドをエイリアスで定義する方が楽チン。\n# ~/.gitconfig [alias] cloc = !cloc $(git ls-files) $ cloc --vcs=gitと同じ結果が出る。\n$ git cloc 169 text files. 163 unique files. 36 files ignored. github.com/AlDanial/cloc v 1.80 T=0.10 s (1558.7 files/s, 36142.7 lines/s) ------------------------------------------------------------------------------- Language files blank comment code ------------------------------------------------------------------------------- Ruby 89 310 388 1590 Haml 38 3 2 315 ... ------------------------------------------------------------------------------- SUM: 155 437 563 2594 ------------------------------------------------------------------------------- ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"9de43759c9959cb0518d113339bc5dd2","permalink":"https://tunepolo.github.io/til/git/cloc/","title":"clocでgit管理下にあるファイルだけを対象とする"},{"content":"Homebrewでインストールする。\n$ brew install goenv パスの設定と、初期化処理をシェルの設定ファイルへ。\nexport PATH=\u0026amp;#34;$HOME/.goenv/bin:$PATH\u0026amp;#34; eval \u0026amp;#34;$(goenv init -)\u0026amp;#34; インストール可能なバージョン一覧を確認し、インストールして、使うバージョンを指定する。\n$ goenv install -l Available versions: 1.2.2 : $ goenv install 1.11.4 $ goenv global 1.11.4 goのバージョンアップにgoenvが(またはHomebrewで入れるgoenvが)追従できておらず、Homebrewの方が新しかった。 複数goバージョンを使い分ける必要ができたときに検討する。\n Golangをgoenvを使ってインストールしてみた - Qiita  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"be5a444a7274fb1df658c937b6b32b5c","permalink":"https://tunepolo.github.io/til/git/goenv/","title":"goenvでインストールする"},{"content":"Gitlabなどの場合は下記の設定で証明書の検証を行わないようにする必要がある。\n$ git config --global http.sslverify false ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"d75bc0f925108f0a417dbd065ebe0583","permalink":"https://tunepolo.github.io/til/git/ignore_ssl_verify/","title":"自己証明書でホストされたgitリポジトリにアクセスする"},{"content":"$ git submodule deinit path/to/submodule $ git rm path/to/submodule 参考  git submoduleを今風な感じで削除する - Qiita  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"784c698c6cbc6feed12fb04f27fb4007","permalink":"https://tunepolo.github.io/til/git/submodule_delete/","title":"git submoduleで管理しているリポジトリを削除する"},{"content":"$ git submodule foreach git pull origin master ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"db7dbfa731dc5287c9de0bf717c49686","permalink":"https://tunepolo.github.io/til/git/submodule_pull_origin_master/","title":"git submoduleで管理しているリポジトリをリモートの最新に追従させる"},{"content":"symbolic-refで別名がつけられる。\nたとえば下記によりSubversionで使われていたtrunkを残しつつ、masterの名前で使えるようにする。\n$ git symbolic-ref master trunk ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"392e9ba8973291fdd02ccdfc1149ef17","permalink":"https://tunepolo.github.io/til/git/symbolic-ref/","title":"ブランチ名に別名をつける"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"83801bf43e3ffa224acb09a916fa9230","permalink":"https://tunepolo.github.io/til/gitbook/","title":"GitBook"},{"content":"Gitbookとは Markdownで書いたファイルをHTML/EPUB/PDFに変換して公開できるツール。 ホスティングサービスと、CLIツールが存在する。\n ホスティングサービス CLIツール  Gitbookの作り方 詳細な説明は下記にある。\n GitBook Documentation  CLIツールを動かすにはnode.jsが必要。 node.jsをインストール後、npmでgitbookをインストールする。\n$ npm install -g gitbook-cli gitbookを作るには最低限2つのファイルが必要。\n README.md SUMMARY.md  目次 ここでリンクを貼ったMarkdownファイルのみが処理される    htmlへの変換は下記コマンドで行う。\n$ gitbook build PDFに変換する Calibreを事前にインストールしておく。\nPDFへの変換は下記コマンドで行う。\n$ gitbook pdf ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"8108a70609b3cf961770df4c3fe63760","permalink":"https://tunepolo.github.io/til/gitbook/basic_command/","title":"Gitbookの基本操作"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"1849ec72f942b6d74f2db64b486a75c6","permalink":"https://tunepolo.github.io/til/google-chrome/","title":"Google Chrome"},{"content":" デベロッパーツールを開く 右上のハンバーガーメニューから「More tools」→「Network Conditions」を開く \u0026amp;ldquo;User Agent : select automatically\u0026amp;quot;のチェックを外し、希望のものを設定する。  参考  Google ChromeでUserAgentを変更する - Qiita  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"71993529b991426eea7d5e8ad1c2008c","permalink":"https://tunepolo.github.io/til/google-chrome/change_user-agent/","title":"UserAgentを変更する"},{"content":"ソースコード中に下記を入れる。\ndebugger; 参考  Chrome の debugger の開始と終了 - Qiita  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"5d582d6e9c186ea6770ba93493f93cf1","permalink":"https://tunepolo.github.io/til/google-chrome/use_debugger/","title":"Chromeのデバッガーを使う"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"17b5c02ffa2f6e84ebbe1f7a6f52c0e5","permalink":"https://tunepolo.github.io/til/heroku/","title":"Heroku"},{"content":"インストール \u0026amp;amp; セットアップ The Heroku CLIを参考にインストールする。\nMacでHomebrewを使う場合は下記でインストールできる。\n$ brew install heroku/brew/heroku インストールできたらログインし、SSH鍵を登録する。\n$ heroku login $ heroku keys:add 新しいアプリケーションを作成する。 $ heroku create Herokuにデプロイする $ git push heroku master Herokuにデプロイされたページを開く $ heroku open ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"ee0024fcb8b1492885643ba7c575efeb","permalink":"https://tunepolo.github.io/til/heroku/basic_command/","title":"Herokuコマンドの基本操作"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"a36817a95fb1b15ca355117797e5e2ab","permalink":"https://tunepolo.github.io/til/homebrew/","title":"Homebrew"},{"content":"$ brew bundle dump Brewfileにインストールしたソフトウェアが書き込まれる。\n$ brew bundle Brewfile でBrewfileに書き込まれたソフトウェアを一括インストールできる。\n","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"8d31447c907d5d83981c65007381db0e","permalink":"https://tunepolo.github.io/til/homebrew/brew_bundle_dump/","title":"インストールしたソフトウェアをファイルに書き出す"},{"content":"Homebrew自体のアップデート $ brew update Homebrew自体 + インストールしたソフトウェアのアップデート $ brew upgrade Homebrew Caskでインストールしたソフトウェアのアップデート $ brew cask upgrade mas-cliでインストールしたソフトウェアのアップデート $ mas upgrade ","date":-62135596800,"description":"","lastmod":"2020-05-06T15:50:35+09:00","objectID":"2d8d81c06364b1f51fb1033e8b062be0","permalink":"https://tunepolo.github.io/til/homebrew/update_command/","title":"Homebrew周りのアップデートコマンド"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"083ab55f102ab8d4eb4f17621118dedd","permalink":"https://tunepolo.github.io/til/iterm2/","title":"iTerm2"},{"content":" 設定画面の Keys → Create a Dedicated Hotkey Window... を開く。 Hotkey、またはDouble-Tap Keyを設定する。 設定画面の General で Only Restore Hotkey Windowを選択する。 設定画面の Profiles で外観を設定する。   iTerm2のHotkeyを使わないなんてもったいない！！ - Qiita  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:51:53+09:00","objectID":"99072bc8109e4dfcebd72ad2c0ba0caa","permalink":"https://tunepolo.github.io/til/iterm2/enable_hotkey/","title":"Hotkeyを有効化する"},{"content":"下記で有効化できる。\nPreferences \u0026amp;gt; Profiles \u0026amp;gt; Session \u0026amp;gt; Status bar enabled \u0026amp;gt; Configure Status Bar 表示位置は Preferences \u0026amp;gt; Appearance \u0026amp;gt; Status Bar Location で上下が選択できる。\n参考  iTerm2 にステータスバーが付いた - Qiita  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:51:53+09:00","objectID":"3684756864fc11475d21998f765a08e6","permalink":"https://tunepolo.github.io/til/iterm2/enable_status_bar/","title":"ステータスバーを表示する"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"ffe689385f2400c55dc72d63cbb5f62c","permalink":"https://tunepolo.github.io/til/jenkins/","title":"Jenkins"},{"content":"JENKINS_ARGSとして--sessionTimeoutでログアウトまでの時間を分で与える。\n$ sudo vim /etc/sysconfig/jenkins ## Type: string ## Default: \u0026amp;quot;\u0026amp;quot; ## ServiceRestart: jenkins # # Pass arbitrary arguments to Jenkins. # Full option list: java -jar jenkins.war --help # JENKINS_ARGS=\u0026amp;quot;--sessionTimeout=1440\u0026amp;quot; $ sudo service jenkins restart  Amazon Linux/CentOSのJenkinsでセッションタイムアウトを24時間にする  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"69294bb8aa46fa8349cc50fc6e15b969","permalink":"https://tunepolo.github.io/til/jenkins/change_session_timeout/","title":"自動ログアウトまでの時間を長くする"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"a339687eea3a005f8622da90af9b1931","permalink":"https://tunepolo.github.io/til/mac/","title":"Mac OS"},{"content":"全画面 Command + Shift + 3\n指定範囲内 Command + Shift + 4\n影付きウィンドウ Command + Shift + 4 + Space\n影無しウィンドウ Command + Shift + 4 + Space + Option\n参考  知らなかった！Macでウィンドウを指定してキャプチャできるショートカットが超便利だった！ | 男子ハック  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"866da8326171d7172f9687774c089019","permalink":"https://tunepolo.github.io/til/mac/capture/","title":"画面キャプチャを撮る"},{"content":"defaultsコマンドで行う。\n$ defaults write com.apple.finder AppleShowAllFiles TRUE # 設定変更後はFinderを再起動する $ killall Finder 参考 ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"63409b9f41f3accf2d7f87098fbcc482","permalink":"https://tunepolo.github.io/til/mac/show_secret_file_in_finder/","title":"Finderで隠しファイルを表示する"},{"content":" ウィンドウの左上にある最大化ボタンを長押し ウィンドウが縮小表示されるようになるので、左右の表示したい側にドラッグ\u0026amp;amp;ドロップする 長押しを解除し、並べて表示したいウィンドウをドラッグ\u0026amp;amp;ドロップする  参考  Split View で Mac の App を 2 つ並べて表示する - Apple サポート  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"980bfe4332b3ca805f6f49440881e74f","permalink":"https://tunepolo.github.io/til/mac/split_view/","title":"ウィンドウを並べて表示する"},{"content":"「システム環境設定」→「キーボード」→「修飾キー」と辿り、キーを入れ替えればよい。\n US仕様のキーボードのMacでControlキーとCaps Lockキーを入れ替える方法 / Inforati  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"06550be2eb6d187cc4e8808485e0f494","permalink":"https://tunepolo.github.io/til/mac/swap_ctrl_caps/","title":"ControlキーとCaps Lockキーを入れ替える"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"db57586d03fcc6ed1d8793b88b18a302","permalink":"https://tunepolo.github.io/til/management/","title":"Management"},{"content":"水槽を透明な板で区切り、一方にカマス、もう一方に餌を入れる。 カマスは餌を食べようとして板にぶつかってしまうが、ぶつかることを学習すると板にぶつからなくなる。 その後板を取り外してもカマスは餌を食べようとせず、そのまま餓死してしまう。\nしかし水槽に新しくカマスを1匹入れると元いたカマスも餌を食べるようになる。\n参考  カマスの実験 | 今週の朝礼  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"fe6fda6b2ea2faa6a79be42bf9069a52","permalink":"https://tunepolo.github.io/til/management/barracuda_experiment/","title":"カマスの実験"},{"content":"プロジェクトにおける関係者の役割・責任を整理し、明確化するために使われるチャート。\nRACIの定義 | R | 実行責任者(Responsible) | タスクの実行に責任を持つ者 | | A | 説明責任者(Accountable) | ステークホルダーから進捗・状況を聞かれた際に説明する責任を持つ者 | | C | 協議先(Consulted) | タスクの実行に関するアドバイスを行う者 | | I | 報告先(Informed) | タスクの進捗報告を受ける者 |\nチャートの作り方  タスクと関係者から構成される表を作成する。 セルにR/A/C/Iを埋める 完成したら関係者に周知する。  作り方のコツは下記の通り。\n Aから記入する。Aは必ず一人にする。 Aの次にRを記入する。 Cは必要であれば記入する。 Iは一番最後に記入する。  参考  RACI（レイシー）とは？ 責任を持つとは？　〜RACIチャートの紹介〜 ｜ DevelopersIO  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:51:53+09:00","objectID":"86a81e6c132d0db5f465d688c6cb8e49","permalink":"https://tunepolo.github.io/til/management/raci/","title":"RACI"},{"content":"心理学者のタックマン氏が唱えたチームビルディングの5段階を指す。\n意見の対立を避けている状態では、チームはまとまらず機能しない。 チームビルディングには、混乱期を避けずにいかに早く次のステージに移動するかが重要となる。\n 形成期(Form):チーム結成直後で違いをよく知らず、不安・緊張・遠慮がある。 混乱期(Storm):意見・主義・主張のぶつかり合いが起きる。 統一期(Norming):混乱を乗り越えて、共通の理解や行動規範が確立する。 機能期(Performing):チームに結束力と一体感が生まれ、成果が出る。 散会期(Adjourning):期限・状況の変化などの理由でメンバー間の相互関係を終結させる。   仕事ができる人は｢正しい衝突｣が超得意！ | 30代から身につけたいキャリア力実戦講座 | 東洋経済オンライン | 経済ニュースの新基準  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"b582e2e92b7f89f507133eb0eeac3009","permalink":"https://tunepolo.github.io/til/management/tuckman_model/","title":"タックマンモデル"},{"content":"MIT Sloan School of Managementのダグラス・マクレガーの著書「企業の人間的側面」で提唱されたモチベーションに関するマネジメントの理論である。\nX理論  人間は経済的動機のみによって労働し、命令・指示されたことしか実行しない\n 次のような仮定に基づいている。\n 人は本質的に仕事が嫌いで、それを避けようとする。 最大限の成果を引き出すためには、強制・制御・命令・脅迫が必要である。 人は野心を抱くこともなく、責任も取りたがらない。命令されたい。  人事の多くの仕組みはX理論の仮定に根ざしている。パフォーマンスレビュー・個別の目標設定・ボーナスシステムなど。\nY理論  人間にとって労働は本来望ましいものであり、自己の能力を発揮し、自己実現を目指すことを望んでいる\n 次のような仮定に基づいている。\n 人は遊びや休息を取るのと同じように、自然に努力して働く。 コミットした目標のために、自己管理・自己統制を行う。コミットメントは成果に関連するチャレンジ・学習・目的意識など内在的な報酬から生まれる。 適切な環境が与えられれば人は責任を回避するのではなく、むしろ求める。想像力・独創力・創造性はすべての人が持っているスキルである。  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"9bf921688912c1ead8f5d3e06c45d458","permalink":"https://tunepolo.github.io/til/management/xtheory_and_ytheory/","title":"X理論とY理論"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-07T10:25:37+09:00","objectID":"2b62044fc16bda9f99b26a1c782d40a0","permalink":"https://tunepolo.github.io/til/node/","title":"Node.js"},{"content":"メジャーバージョンが奇数は開発用、偶数はLTS（long term support、長期サポート用）である。\nメジャーバージョンがリリースされると、6か月間の\u0026amp;quot;Current release status\u0026amp;quot;にはいる。 これはnpmライブラリ作者が対応するための期間である。\nCurrent release status終了後の対応は以下の通り。\n 奇数バージョン : サポート終了 偶数バージョン : Active LTS statusに入り、30か月のサポートが開始される。  サービスにはActive LTSかMaintenance LTS releasesを使用するべきである。\n Release | Node.js  ","date":-62135596800,"description":"","lastmod":"2020-05-07T10:25:37+09:00","objectID":"0138b543d05ece647c4d7b433ca0e714","permalink":"https://tunepolo.github.io/til/node/support_policy/","title":"Node.jsのLTSサポート方針"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"05742d625cf903dbd9ec848e3fe1f514","permalink":"https://tunepolo.github.io/til/npm/","title":"npm"},{"content":"# npm update -g npm ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"2d8ebd8c6014b3eb4b1910a6938fed06","permalink":"https://tunepolo.github.io/til/npm/npm_global_verup/","title":"npmのバージョンを上げる"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"ce35b487b83e5399fddf6baffd97d664","permalink":"https://tunepolo.github.io/til/php/","title":"PHP"},{"content":"文字列型とキャスト echoで出力する場合、文字列以外の変数・定数は文字列にキャストされて出力される。 下記の例は15.0ではなく、15と表示される。\necho 15.0; // 15と出力される printf(\u0026amp;#39;%.1f\u0026amp;#39;, 15.0); // 15.0と出力される falseと判断される論理型 PHPは下記をfalseと判断する。\n false (論理型) 0 (整数型) 0.0 (浮動小数点型) 空の文字列 (\u0026amp;quot;\u0026amp;quot;)、文字列のゼロ (\u0026amp;ldquo;0\u0026amp;rdquo;) 要素の数が0の配列 null 空のタグから作成されたSimpleXMLオブジェクト  「数値らしき文字列」を整数型・浮動小数点型にキャストする。 下記のスクリプトはequalを出力する。 0.0が浮動小数点型に、0が整数型にキャストされる。 両者が比較される際に浮動小数点型で統一され、if文の評価がtrueとなる。\nif (\u0026amp;#39;0.0\u0026amp;#39; == \u0026amp;#39;0\u0026amp;#39;) { echo \u0026amp;#39;equal\u0026amp;#39;; } 数字を文字列と連結する際にスペースがないとパースエラーとなる。 $str1 = \u0026amp;#34;He\u0026amp;#39;s \u0026amp;#34; . 10 . \u0026amp;#34; years old.\u0026amp;#34;; // \u0026amp;#34;He\u0026amp;#39;s 10 years old.\u0026amp;#34; $str2 = \u0026amp;#34;She\u0026amp;#39;s \u0026amp;#34; . 11. \u0026amp;#34; years old.\u0026amp;#34;; // \u0026amp;#34;11.\u0026amp;#34;が浮動小数点型と判断され、パースエラーが発生する。 三項演算子が入れ子にできる。 三項演算子は左結合であるため、下記の式は(true ? 1 : false) ? 2 : 0と評価され、2が出力される。\necho true ? 1 : false ? 2 : 0; // 2が出力される。 PHPの配列はすべて連想配列である。 他言語である配列とハッシュ（連想配列）の区別がない。 この特性から、PHPの連想配列は順序が保証されている。\n別ファイルに記述されたPHPファイルを読み込む requireとincludeがある。前者はファイルがなければFatal Errorを返す。後者はWarningとなる。 どちらも読んだ回数だけ実行されるため、ライブラリ読み込みのように1度きり読み込む際はrequire_onceかinclude_onceを使う。\n宣言していないプロパティにアクセスできる。 プロパティ名のtypoをしたらハマりそう。\nclass Hoge { // ... } $foo = new Hoge(); $foo-\u0026amp;gt;bar = \u0026amp;#34;hogehoge\u0026amp;#34;; // barプロパティが作成される ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:51:53+09:00","objectID":"a5ae4f8109eb047d0b6cc517fe398363","permalink":"https://tunepolo.github.io/til/php/php_strange_spec/","title":"PHPのヘンテコ仕様"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"c11fc2e7337f24b4d577cd1cf58849bf","permalink":"https://tunepolo.github.io/til/ruby-on-rails/","title":"Ruby on Rails"},{"content":"モデル生成 Userモデルを生成する。\n   field type     id integer   name string   email string   created_at datetime   updated_at datetime    $ rails generate model User name:string email:string Userモデルと関連を持つMicropostモデルを生成する。\n   field type     id integer   content text   user_id integer   created_at datetime   updated_at datetime    $ rails generate model Micropost content:text user:references DB操作 マイグレーション $ rails db:migrate DBのリセット $ rails db:migrate:reset 初期データ/ダミーデータの挿入 $ rails db:seed ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"1195b4ddebc4b24a5827721ab4eaa30b","permalink":"https://tunepolo.github.io/til/ruby-on-rails/basic_command/","title":"Railsコマンドの基本操作"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"1393b233cd8f72b4d74f9ee5baf70a22","permalink":"https://tunepolo.github.io/til/ruby/","title":"Ruby"},{"content":"rbenvを使ったrubyのインストール $ rbenv install --list $ rbenv install 2.6.1 $ rbenv global 2.6.1 $ rbenv version rbenvを更新する $ brew update $ brew update rbenv ruby-build rbenvで入れたgemをまとめて更新する rbenv-eachを使う。\n$ git clone https://github.com/rbenv/rbenv-each.git \u0026amp;#34;$(rbenv root)\u0026amp;#34;/plugins/rbenv-each $ rbenv each gem update --system ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"6d4221ac38401ea5640817d1130c89c3","permalink":"https://tunepolo.github.io/til/ruby/rbenv_basic/","title":"rbenvの基本操作"},{"content":"        var search = instantsearch({ indexName: \u0026#39;til\u0026#39;, searchClient: algoliasearch( \u0026#39;8SF8KJJWGW\u0026#39;, \u0026#39;42e69eff6e94918d7cb871bcbe88cc1e\u0026#39; ), routing: true, }); const renderHits = (renderOptions, isFirstRender) = { const { hits } = renderOptions; document.querySelector(\u0026#39;#hits\u0026#39;).innerHTML = ` ${hits .map( item = `${ item.title }${ dayjs(item.lastmod).format(\u0026#34;YYYY/MM/DD\u0026#34;) } - ${ item.description ? item.description : item.content.length  200 ? item.content.substring( 0, 200 ) + \u0026#39;...\u0026#39; : item.content }\n` ) .join(\u0026#39;\u0026#39;)} `; }; const customHits = instantsearch.connectors.connectHits( renderHits ); search.addWidgets([ instantsearch.widgets.searchBox({ container: \u0026#39;#searchbox\u0026#39;, showReset: false, }), instantsearch.widgets.stats({ container: \u0026#39;#stats\u0026#39;, }), customHits({ container: document.querySelector(\u0026#39;#hits\u0026#39;), }), instantsearch.widgets.pagination({ container: \u0026#39;#pagination\u0026#39;, maxPages: 20, }) ]); search.start();  ","date":-62135596800,"description":"","lastmod":"2020-05-05T20:43:16+09:00","objectID":"e70fff4f74e107cdcde5c9e2abcfc149","permalink":"https://tunepolo.github.io/til/search/","title":"Search"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"63c867b8cb3d97c8f9ef5512f3ecc922","permalink":"https://tunepolo.github.io/til/security/","title":"Security"},{"content":"概要 正規の権限を持つユーザに対して意図しない操作を行わせる。 「SNSに勝手に投稿する」「コンテンツを削除・改変する」「パスワードを勝手に変更する」など。\n対応方法 ワンタイムトークンを発行しチェックする。 予測困難な不規則な文字列（トークン）をセットし、処理の開始前にセッション変数とトークンの検証を行う。\n参考  クロスサイトリクエストフォージェリ - Wikipedia  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"6fd9812ce3098e450f5960bdb7cd78d5","permalink":"https://tunepolo.github.io/til/security/csrf/","title":"クロスサイトリクエストフォージェリ（CSRF）"},{"content":"概要 入力ファイル名のセキュリティ検証/無害化が不十分なため、ファイルAPIに対して「親ディレクトリへの横断 (traverse)」を示すような文字がすり抜けて渡されてしまう。 ディレクトリを遡って任意のファイルにアクセスできてしまう。\n対策  リクエストからの値をファイル名などに利用しない。 読み込みを許可するファイルをホワイトリスト化しておき、チェックする。 ファイル名への使用を禁止する文字列をブラックリスト化しておき、チェックする。 言語・WAFの機能を利用する。  PHP → open_basedir    参考  ディレクトリトラバーサル - Wikipedia  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"23eebb1d91c38e6fd26863a398ac3e7e","permalink":"https://tunepolo.github.io/til/security/directory_traversal/","title":"ディレクトリトラバーサル"},{"content":"概要 悪意のあるコードを含んだファイルをアップロードして任意の処理を実行させる。\n対策  アップロードされたファイルをドキュメントルートの外側に置く。 推測不可能なファイル名で保存する。  参考  ファイルアップロード攻撃 - ぱろっくの日記  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"a8889fb900acba60d989154b94e391fb","permalink":"https://tunepolo.github.io/til/security/file_upload_attack/","title":"ファイルアップロード攻撃"},{"content":"概要 改行コードを含む不正なリクエストをサーバに送りつけることで、改ざんされたHTTPレスポンスヘッダーを送らせ、意図しない動作をブラウザに行わせる。\n対応方法  言語・WAFのバージョンを上げる。改行コードを含むヘッダーがセットできないようになっている。 プログラムで改行コードをチェックする。  参考  HTTPヘッダーインジェクション  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"c893353a675f32b598fd0312902acfe3","permalink":"https://tunepolo.github.io/til/security/http_header_injection/","title":"HTTPヘッダーインジェクション"},{"content":"概要 Nullバイト（\u0026#39;\\0\u0026amp;rsquo;, \u0026amp;lsquo;\\x00\u0026amp;rsquo;, \u0026amp;lsquo;%00\u0026amp;rsquo;）をリクエストに含めることで、セキュリティチェックをくぐりぬけようとする攻撃。 サーバ側の処理でバイナリセーフない処理が入っているとこれにより誤動作を起こしてしまうことがある。\nPHP 5.3.4以降では起きにくくなったらしい。\n 参考:PHP 5.3.4以降ではヌルバイト攻撃が成立しにくくなった - hnwの日記  対応方法  処理の最初にNullバイトを削除する。 バイナリセーフな関数を極力使う。  参考  NULLバイト攻撃への対策（ヌルバイトアタック） - Qiita  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:51:53+09:00","objectID":"ed256364112cd26747326654744a3b18","permalink":"https://tunepolo.github.io/til/security/null_byte_attack/","title":"Nullバイト攻撃"},{"content":"概要 パラメーターにOSへの命令文を紛れ込ませ、サーバ内の任意のコマンドを実行させることで攻撃を仕掛ける。\n対策  外部ファイル・コマンドを実行する仕組みを作らない。  参考  OSコマンドインジェクションの仕組みとその対策 | セキュリティ対策 | CyberSecurityTIMES  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"6dfb6078d7547c7e25ba6cea544a24ae","permalink":"https://tunepolo.github.io/til/security/os_command_injection/","title":"OSコマンドインジェクション"},{"content":"概要 サイトにスクリプトを含むリクエストを送信し、サイトを訪れた第三者に悪意のあるコードを実行させる脆弱性の総称。\n攻撃対象のサイトだけでなく、別サイトへのリダイレクトなど複数サイトを横断させてスクリプトを実行させることもできることからクロスサイトスクリプティング（XSS）とも呼ばれる。\n   名前 説明     持続型 攻撃者がスクリプトを含むリクエストを送信してサーバーに保存させる。保存されたスクリプトを組み込んだページを訪れた第三者にスクリプトを実行させる。   反射型 第三者にスクリプトを含むリクエストを送信させる。送信したスクリプトがページ内に差し込まれる脆弱性を利用して、リクエストを送信したページ上でスクリプトを実行させる送信したスクリプトはサーバーに保存されない。   DOMベース 第三者にスクリプトを含むリクエストを送信させ、クライアントサイドスクリプトの脆弱性を利用する。    対応方法  出力時にエスケープを行って攻撃コードを無効化する。 厳密に値を入力検査する インラインスクリプトにユーザーの入力を展開しない。 文字コードを指定する  レスポンスヘッダーに適切な文字コードを指定しないと、文字化けを利用してスクリプトを混入させる隙を与えるため。    参考  スクリプトインジェクション入門 - Qiita  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"37ebf8070b46e1abf4adcda5f57ec8ac","permalink":"https://tunepolo.github.io/til/security/script_injection/","title":"スクリプトインジェクション / クロスサイトスクリプティング（XSS）"},{"content":"概要 第三者のセッションを乗っ取り、不正な操作を行う。\n リファラによる漏洩 XSSによるセッションIDの入手 セッション固定攻撃によるセッションIDの指定 通信データの盗聴、ウイルスによるID取得  セッション固定攻撃 攻撃対象のユーザに対して任意のセッションIDを強制的に利用させる。\n下記の場合に起きうる。\n ログイン前にセッションを有効化 ログイン処理時に外部から与えられたセッションIDを使ってしまうシステム 自身が発行したものでないセッションIDを受け入れてしまう「セッションアダプション」という脆弱性を抱えている  また「Cookie Monsterバグ1」を利用し、Cookieに意図的なIDを埋め込んでセッション固定攻撃を仕掛ける方法もある。\n対応方法  セッションIDをCookiのみで大なう セッションハイジャックされていないかチェック  一連のリクエウトの最中にクライアントのヘッダーに変化がないか（Accept-CharsetやUser-Agentなど）   重要な処理を行う前にパスワードを入力させる。 ログイン後にセッションIDの再発行を行う。  参考  セッション固定攻撃 | 鳩丸ぐろっさり (用語集)    ブラウザの不具合を利用してセカンドレベルドメインに対して任意のCookieをセットできる \u0026amp;#x21a9;\u0026amp;#xfe0e;\n   ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:51:53+09:00","objectID":"f34e186011a26842e92f792d3c20310d","permalink":"https://tunepolo.github.io/til/security/session_hijack/","title":"セッションハイジャック"},{"content":"概要 データベースに対する命令文（SQL）を改竄して意図しない操作を行う。\n対応方法  入力をエスケープする。 PreparedStatementを利用する。  参考  SQLインジェクション - Wikipedia  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"86af448e3c3da8c48e52ead567cd007c","permalink":"https://tunepolo.github.io/til/security/sql_injection/","title":"SQLインジェクション"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"f84386ed873bec480fdd3b0352443561","permalink":"https://tunepolo.github.io/til/seo/","title":"SEO"},{"content":"Search Engine Result Pageの略で、ユーザーが検索エンジンで検索したキーワードの検索結果ページを指す。 SERPs（サープス）と複数形で呼ぶこともある。\n","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"c424c575cd48316245e1fe3579c7a53d","permalink":"https://tunepolo.github.io/til/seo/serp/","title":"SERP"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"d1fa1fcdc7ebe9e0fabae4347a3d1ce6","permalink":"https://tunepolo.github.io/til/visual-studio/","title":"Visual Studio"},{"content":"ライブラリ側のプロパティを下記のとおり変更する。\n[プロパティ]-\u0026amp;gt;[C/C++]-\u0026amp;gt;[デバッグ情報の生成]の項目をZiからZ7(C7互換)に変更 ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"10c2673b15e7aa18aec8d020ec8754c6","permalink":"https://tunepolo.github.io/til/visual-studio/suppress_pdf_missing_warning/","title":"ライブラリリンク時に'pdbファイルがない'警告を抑制する"},{"content":"#pragma warning(push) // 今の設定を退避 (必要なら) #pragma warning(disable:4996) #pragma warning(disable:4068) // C4996とC4068は抑制される  ... #pragma warning(pop) // 元の設定に戻す  VC++2010のTIPSメモ  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"433751e371093ff76fa4d1a2eabc22a2","permalink":"https://tunepolo.github.io/til/visual-studio/suppress_warning/","title":"コンパイル時の警告を抑制する"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"abef95b2676a68e517c40b8aeb04ce1d","permalink":"https://tunepolo.github.io/til/web/","title":"Web"},{"content":"Webサイトのパフォーマンスに関する予算（メトリクスの上限値）を定義し、リリース時に遵守することでパフォーマンスを継続的に良い状態に保つ仕組み。\nメトリクスの種類は下記がある。\n Milestone : ページローディングの開始から完了までの時間  First Contentful Paint Time to Interactive Speed Index   Quantity : アセットや通信量  JavaScriptのファイル合図 HTTPリクエスト数 クリティカルレンダリングパスの数   Rules  PageSpeed InsightsやLighthouseなどのスコア    CIにチェック機構を組み込むことで継続的に監視すると良い。\n GoogleChromeLabs/lighthousebot: Run Lighthouse in CI, as a web service, using Docker. Pass/Fail GH pull requests. siddharthkp/bundlesize: Keep your bundle size in check SpeedCurve: Monitor front-end performance  参考  Google Developers Japan: パフォーマンスバジェットのご紹介 - ウェブパフォーマンスのための予算管理  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"95ef6902dce606922fea44ddd7ebd093","permalink":"https://tunepolo.github.io/til/web/performance_budget/","title":"パフォーマンスバジェット"},{"content":"","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"3ca65729c0bbeebb1cb344a6095ecd9f","permalink":"https://tunepolo.github.io/til/windows/","title":"Windows"},{"content":"REGEDIT4 [HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Keyboard Layout] \u0026amp;#34;Scancode Map\u0026amp;#34;=hex:00,00,00,00,00,00,00,00,02,00,00,00,1d,00,3a,00,00,00,00,00 ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"eb83a49d15768f0478d242dcfbb6468f","permalink":"https://tunepolo.github.io/til/windows/caps_to_ctrl/","title":"CapsキーをCtrlにし、元のCtrlキーもそのままにするレジストリ設定"},{"content":"cmdと入れると、開いているディレクトリをカレントにしてコマンドプロンプトが開ける。 ネットワーク上の共有フォルダーの場合、コマンドプロンプトは開けないが、powershellとすることでPowerShellが立ち上がる。\n Windows Explorer のアドレスバーは、\u0026amp;ldquo;ファイル名を指定して実行\u0026amp;quot;を超える  ","date":-62135596800,"description":"","lastmod":"2020-05-05T17:43:45+09:00","objectID":"9588f90b530ab2788bb3a19eb6062936","permalink":"https://tunepolo.github.io/til/windows/explorer_address_bar/","title":"エクスプローラーのアドレスバーは\"ファイル名を指定して実行\"と同じことができる"}]