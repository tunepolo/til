<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on Today 'tunepolo' Leaned</title><link>https://tunepolo.github.io/til/git/</link><description>Recent content in Git on Today 'tunepolo' Leaned</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><atom:link href="https://tunepolo.github.io/til/git/index.xml" rel="self" type="application/rss+xml"/><item><title>clocでgit管理下にあるファイルだけを対象とする</title><link>https://tunepolo.github.io/til/git/cloc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tunepolo.github.io/til/git/cloc/</guid><description>clocではvcsオプションがあり、git配下にあるファイルのみを対象とできる。 Respect .gitignore · Issue #49 · AlDanial/cloc $ cloc --vcs=git 169 text files. 163 unique files. 36 files ignored. github.com/AlDanial/cloc v 1.80 T=0.35 s (439.0 files/s, 10178.5 lines/s) ------------------------------------------------------------------------------- Language</description></item><item><title>git secretsの基本操作</title><link>https://tunepolo.github.io/til/git/basic_secrets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tunepolo.github.io/til/git/basic_secrets/</guid><description>Homebrewでインストールする。 $ brew install git-secrets git-secretsを利用するリポジトリでhookのインストールを行い、パターンを登録する。 $</description></item><item><title>git submoduleで管理しているリポジトリをリモートの最新に追従させる</title><link>https://tunepolo.github.io/til/git/submodule_pull_origin_master/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tunepolo.github.io/til/git/submodule_pull_origin_master/</guid><description>$ git submodule foreach git pull origin master</description></item><item><title>git submoduleで管理しているリポジトリを削除する</title><link>https://tunepolo.github.io/til/git/submodule_delete/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tunepolo.github.io/til/git/submodule_delete/</guid><description>$ git submodule deinit path/to/submodule $ git rm path/to/submodule 参考 git submoduleを今風な感じで削除する - Qiita</description></item><item><title>goenvでインストールする</title><link>https://tunepolo.github.io/til/git/goenv/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tunepolo.github.io/til/git/goenv/</guid><description>Homebrewでインストールする。 $ brew install goenv パスの設定と、初期化処理をシェルの設定ファイルへ。 export PATH=&amp;#34;$HOME/.goenv/bin:$PATH&amp;#34; eval &amp;#34;$(goenv init -)&amp;#34; インストール可能なバージョン一覧を</description></item><item><title>アクセス権の扱い</title><link>https://tunepolo.github.io/til/git/access_right_handling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tunepolo.github.io/til/git/access_right_handling/</guid><description>実行権限をつける/はずす 実行権限をつけるとき。 $ git update-index --add --chmod=+x [filename] 実行権限を外すとき。 $ git update-index --add --chmod=-x [filename] アクセス権の違いを無視する $ git config core.filemode false</description></item><item><title>ブランチ名に別名をつける</title><link>https://tunepolo.github.io/til/git/symbolic-ref/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tunepolo.github.io/til/git/symbolic-ref/</guid><description>symbolic-refで別名がつけられる。 たとえば下記によりSubversionで使われていたtrunkを残しつつ、masterの名前で使</description></item><item><title>自己証明書でホストされたgitリポジトリにアクセスする</title><link>https://tunepolo.github.io/til/git/ignore_ssl_verify/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tunepolo.github.io/til/git/ignore_ssl_verify/</guid><description>Gitlabなどの場合は下記の設定で証明書の検証を行わないようにする必要がある。 $ git config --global http.sslverify false</description></item></channel></rss>